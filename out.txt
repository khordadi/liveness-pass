/usr/bin/make -f /Users/khordadi/popcorn/sample/Makefile all
cmake --build ../build --target Popcorn -- -j 4
Scanning dependencies of target Popcorn
[ 50%] Building CXX object CMakeFiles/Popcorn.dir/Popcorn.cpp.o
[100%] Linking CXX shared library libPopcorn.dylib
[100%] Built target Popcorn
clang -emit-llvm -S -o main.ll main.c
/usr/local/opt/llvm/bin/opt -load-pass-plugin ../build/libPopcorn.dylib -passes=popcorn -disable-output main.ll
=================================================
Reachable Value analysis results
=================================================
[[BasicBlock %0]]
-------------------------------------------------
[[BasicBlock %12]]
==>  %1 = alloca i32, align 4
==>  %3 = alloca i32, align 4
==>  %2 = alloca i32, align 4
==>  %5 = alloca i32, align 4
==>  %4 = alloca i32, align 4
==>  %8 = alloca %struct.structure, align 4
==>  %7 = alloca %struct.structure, align 4
==>  %6 = alloca i32, align 4
==>  %9 = alloca [66 x i32], align 16
==>  %10 = load i32, i32* %1, align 4
==>  %11 = icmp sgt i32 %10, 0
-------------------------------------------------
[[BasicBlock %28]]
==>  %1 = alloca i32, align 4
==>  %3 = alloca i32, align 4
==>  %2 = alloca i32, align 4
==>  %5 = alloca i32, align 4
==>  %4 = alloca i32, align 4
==>  %8 = alloca %struct.structure, align 4
==>  %7 = alloca %struct.structure, align 4
==>  %6 = alloca i32, align 4
==>  %9 = alloca [66 x i32], align 16
==>  %10 = load i32, i32* %1, align 4
==>  %11 = icmp sgt i32 %10, 0
-------------------------------------------------
[[BasicBlock %27]]
==>  %1 = alloca i32, align 4
==>  %3 = alloca i32, align 4
==>  %2 = alloca i32, align 4
==>  %5 = alloca i32, align 4
==>  %4 = alloca i32, align 4
==>  %8 = alloca %struct.structure, align 4
==>  %7 = alloca %struct.structure, align 4
==>  %6 = alloca i32, align 4
==>  %9 = alloca [66 x i32], align 16
==>  %10 = load i32, i32* %1, align 4
==>  %11 = icmp sgt i32 %10, 0
-------------------------------------------------
[[BasicBlock %22]]
==>  %1 = alloca i32, align 4
==>  %13 = load i32, i32* %1, align 4
==>  %14 = load i32, i32* %2, align 4
==>  %3 = alloca i32, align 4
==>  %2 = alloca i32, align 4
==>  %16 = load i32, i32* %2, align 4
==>  %5 = alloca i32, align 4
==>  %4 = alloca i32, align 4
==>  %8 = alloca %struct.structure, align 4
==>  %15 = mul nsw i32 %13, %14
==>  %7 = alloca %struct.structure, align 4
==>  %6 = alloca i32, align 4
==>  %18 = sdiv i32 %16, %17
==>  %19 = load i32, i32* %5, align 4
==>  %17 = load i32, i32* %3, align 4
==>  %9 = alloca [66 x i32], align 16
==>  %10 = load i32, i32* %1, align 4
==>  %11 = icmp sgt i32 %10, 0
==>  %20 = load i32, i32* %6, align 4
==>  %21 = icmp eq i32 %19, %20
-------------------------------------------------
[[BasicBlock %26]]
==>  %1 = alloca i32, align 4
==>  %13 = load i32, i32* %1, align 4
==>  %14 = load i32, i32* %2, align 4
==>  %3 = alloca i32, align 4
==>  %2 = alloca i32, align 4
==>  %16 = load i32, i32* %2, align 4
==>  %5 = alloca i32, align 4
==>  %4 = alloca i32, align 4
==>  %8 = alloca %struct.structure, align 4
==>  %15 = mul nsw i32 %13, %14
==>  %7 = alloca %struct.structure, align 4
==>  %6 = alloca i32, align 4
==>  %18 = sdiv i32 %16, %17
==>  %19 = load i32, i32* %5, align 4
==>  %17 = load i32, i32* %3, align 4
==>  %9 = alloca [66 x i32], align 16
==>  %10 = load i32, i32* %1, align 4
==>  %11 = icmp sgt i32 %10, 0
==>  %20 = load i32, i32* %6, align 4
==>  %21 = icmp eq i32 %19, %20
-------------------------------------------------
[[BasicBlock %24]]
==>  %1 = alloca i32, align 4
==>  %13 = load i32, i32* %1, align 4
==>  %14 = load i32, i32* %2, align 4
==>  %3 = alloca i32, align 4
==>  %2 = alloca i32, align 4
==>  %16 = load i32, i32* %2, align 4
==>  %5 = alloca i32, align 4
==>  %4 = alloca i32, align 4
==>  %8 = alloca %struct.structure, align 4
==>  %15 = mul nsw i32 %13, %14
==>  %7 = alloca %struct.structure, align 4
==>  %6 = alloca i32, align 4
==>  %18 = sdiv i32 %16, %17
==>  %19 = load i32, i32* %5, align 4
==>  %17 = load i32, i32* %3, align 4
==>  %9 = alloca [66 x i32], align 16
==>  %10 = load i32, i32* %1, align 4
==>  %11 = icmp sgt i32 %10, 0
==>  %20 = load i32, i32* %6, align 4
==>  %21 = icmp eq i32 %19, %20
-------------------------------------------------



Process finished with exit code 0
